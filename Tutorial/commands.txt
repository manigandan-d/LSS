echo $SHELL
 
Directory:
pwd	=>Present working Directory
mkdir	=>create a directory
 
multiple directory:
mkdir dir1 dir2 
mkdir {name1,name2,name3} suffix
mkdir Prefix {name1,name2,name3} 
mkdir name{start..end}
 
Dirctoryname with space:
mkdir "My Doc"
mkdir My\ Doc   => \ drop the special
 
 
clear : =>clear screen
 
/	=>root directory
.	=>Current dircetory
~	=>home Dircetory
-
 
cd:
cd	=>change directory
cd ..           =>move to previous directory
cd /	=>Move to root
cd -	=>Move to Previous position
cd ~          =>Move to home
 
File Creation:
cat > filename	=>create a newfile if not Persent
		=>if the file exist it Overwrites
ctrl + D		=>Save & exit
ctrl + z  		=>suspend
 
cat >> filename       	=>Append (add data to EOF)
 
cat >.filename	=>Hidden file
 
creation of more than one file:
touch file1 file2 fil3    =>create a empty file
tee file1 file2 file3      =>create files with data
ctrl + D		=>Save & exit
 
Display:
cat filename	=>display data in file
tac filename	=>Reverse display data in file
 
Display multiple file:
cat  file1 file2 file3     =>Display all file information
cat  file1 - file2 - file3     =>Display all file information
(ctrl+D)
 
Display with Cat:
cat -n filename	=>gives number for the data in file(including empty line).
cat -b filename	=>gives number for the data in file(excluding empty line).
cat -E Filename      	=> mention EOL
cat -T filename       	=>Tab space (^I)
cat -S filename	=>reduce multiple space to single line
 
 
File Overwrite:
cat > filename	=>create a newfile if not Persent
		=>if the file exist it Overwrites
 
set  -o noclobber	=>prevent of Overwritting of file
set +o noclobber	=> Allows Overwritting of file
 
Combination:
cat -n -E filename
 
 
ls:
ls	=>List all the file & directory(exclusive of hidden file)
ls -a	=>List all the file & directory(inclusive of hidden file [.  ..])
ls -A	=>exclusive [. ..]
ls -l	=>long list
	col-1 : drwxrwxr-x     file permission
	col-2 : no of link for file
	col-3&4:  owner & group information
	col-5: file size in bytes
	col-6: Date  of creation / updation
	col-7: Directory / filename
ls -h	=>display file size in human readable 
ls -m	=>comma sperated display
ls -1	=>display one after other
ls -S	=>sort file based on size(ASC)
ls -Sr	=>sort file based on size(DSC)
ls -t	=>display based on time of creation
ls -tr	=>reverse 
ls -i	=>display inode number
ls -p	=>identify the directory
 
ls -d */	=>list all dircetor\y
ls *.txt	=>fetch file of given extension
ls -d User* =>0 or many
ls -d User? =>exact one
ls -d user[3,6,1]
 
ls /	=>list element in root directory
ls ~	=>list element in home directory
ls *	=>list all file & directory  include (sub-directory)
ls -R
 
Redirection:
 
1> 	=>Output redirection
	 =>cat filename 1> copyName
 
1>>	=>Append
 
2>	=>error redirection
2>>	=>Append
 
 
Output redirection:
cat sourcefile > destinationfile
cat sourcefile >> destinationfile
cat sourcefile1 sourcefile2 sourecfile3  > destinationfile
 
copy: cp
cp sourcefile destination
cp sourcefile destinationpath
cp *.exe destinationpath
 
 
move:mv
mv sourcefile destination
 
remove:
Dircetory:
rmdir dirname	=>remove directory(empty dir)
rm -r dirname	=>remove directory(with file)
 
 
File:
rm filename	=>Remove file
rm -i filename           =>Remove file (interactive)
rm *.ex      =>Remove file of particular extension
 
 
Sort:
sort filename	=>Asc
sort -M filename	=>sort months
sort -c filename         => checking
sort -r filename	=>reverse
sort -n filename	=>number
sort -nr filename	=>number reverse
 
 
File with delimiter:
sort filename	=> sort based on 1st col
 
sort -t 'delimiter'   filename     =>Character
		=>sort 	=>cmd
		=>-t	=>delimiter
		=>-k	=>column
		=>-n	=>column number
 
 
sort -nt 'delimiter'   filename     =>number
 
 
cut:
cut -d 'delimiter'  -fn filename  =>nth column
		=>cut 	=>cmd
		=>-d	=>delimiter
		=>-f	=>column
		=>-n	=>column number
 
cut -d 'delimiter'  -fstart -fend filename =>n no of column
 
 
cut:
cut -cn	filename=>n column
cut -cstart-end filename=>n no of column
cut -c1,3,5	=>specified column will be display

Sort:
 
Sorting data in Orginal file:
sort -o destination sourcefile
sort -o destination  -r sourcefile =>reverse
 
|
;	=>excute multiple command
&&	=>excute multiple command(untill  interppert)
 
Change the Mode of file:
 
r	=>read =>4
w	=>write =>2
x	=>Execute=>1
 
Animals.txt
 
-rw-rw-r--	=>user(u) =>rw-
	=>group(g)=>rw-
	=>other(o) =>r--
 
chmod toWhom + Permission filename
chmod toWhom - Permission filename
 
ex:
=>user	=>rwx	=>7
=>group	=>rw	=>6
=>other	=>r	=>4 =>7
 
chmod 767 filename
 
---------------------------
Word Count:
 
wc -l filename 	=>display no of lines in file
wc -c filename 	=>display no of character in file
wc -c filename 	=>display no of word in file
 
---------------------------
uniq:
 
cat fileName	=>Display data with duplicate
uniq fileName	=>remove the adjustent duplicates
uniq -c fileName       => Displays the count of duplicates(case )
uniq -d fileName 	=>Display repeated word
uniq -u fileName 	=>Display uniq word
uniq -ic fileName 	=>ignore case
 
------------------------------
Tr:
 
tr 'char to be replaced' 'newchar'  <filename
 
tr -d '[:space:]' <filename	=>remove space/next line
tr -d '[:blank:]' <filename
 
------------------------------------
Comm Command:
 
noted: Applied only one on sorted  file.
comm file1 file2
 
output:   3 column
(uniq data in 1st file )     (uniq data in 2nd file)     (duplicate data in both)
 
 
comm -1  file1  file2	=>suppress 1st
comm -2  file1  file2	=>suppress 1st
comm -3  file1  file2	=>suppress 1st
 
--------------------------------------------------------------------
head:
head filename	=>Display first 10 lines
head -n filename	=>Display first n lines
head -Cn filename	=>Display first n character
 
tail:
tail filename	=>Display last 10 lines
tail -n filename	=>Display last n lines
tail -Cn filename	=>Display lastn character
 
--------------------------------------------------------------------
Link:
 
Hardlink:
=>Same location/different location
=>same-time/file size/data
 
ln sourcefile linkfile		=>Hardlink can not be create on existing file
ln -i sourcefile linkfile	=> interactive(y/n)
ln -f sourcefile linkfile	=>Forceful
 
 
Softlink:
 
ln -s sourcefile linkfile
=>Same location/
=>different-time/file size/Permission

Grep:
	=>returns the match word
 
grep:
 
grep 'word' filename	=>return match string/substring
 
grep -w 'word' filename =>return word match
grep -i 'word' filename =>return  ignore case
grep  '^word' filename =>begining
grep  'word$' filename =>end
grep -c 'word' filename=>count
grep -v 'word' filename =>return non-matched line
grep -r 'word'	=>return match in given path
 
grep --color 'word' filename
 
grep 'blue\|glue' filename . =>\
grep -E 'Word' filename
 
egrep:extended grep
 
fgrep: fixed grep
---------------------------------------------
 
Archive a directory:(tar)
note:tar will create archive file
 
create an Archive:
tar -cf  path    sourcedirectory
 
view:
tar -tf  archive file
 
extract: 
tar -xf  archive file
 
----------------------
Archive a file:
tar -cf Archivefilename   file1 file2 fil3-
 
 
find:
 
find -type d	=>Display all directory in present/ sub-dir
find -type f	=>Display all file in present/ sub-dir
find . -name '*.exe'	=>Display all .c file in present/ sub-dir
 
find . -perm 777	=>Display all file of given permission
 
find . -iname  filename
 
---------------------------
copies all .c file to given destination
find  path  -name  '*.c'  -exec      cp {}  ./tempbackup/  \;
 
remove all .c file to given destination
find  sourcepath  -name  '*.c'  -exec      rm {}   \;
----
zip:
gzip filename =>
 
-1  =>fast compress
-9  =>slow compress
 
default =>-5
size: 77731
gzip filename =>7321
gzip -1 filename =>11258
gzip -9 filename =>7302
 
gunzip.gz => unzip
zcat =>view the content of zip file
-----------------
 
more/less:
 
more : terminate
space      =>scroll froward 1 page
enter       =>line by line
d	=>scroll forward 1/2 page
b	=>Scroll backward 1 page
 
less: quit
 
------------------------------------
Vi Editor:
 
create / open =>vi filename.sh
excute	      =>sh filename.sh
 
2 Mode:
	1.insert -insert the data
	2.esc     -
 
Save & quit:(esc)
:wq    
:zz
:x
 
quit:(force quit)
:q!
 
 
Cursor movement:(esc)
	h	=>left
	l 	=>right
	j	=>down
	k	=>up
	$	=>moves cursor to last of current line
	0	=>moves cursor to begin of current line
	w	=>next word
	b	=>move beginning
	H	=>top of screen
	M	=>mid of screen
	L	=>bottom of screen
 
Insert:
	r	=>replace 1 char
	R	=>replace until Esc is given
	i	=>insert before cursor
	a	=>insert after cursor
	A	=>end of line
delete:	
	x	=>char dele
	dd	=>delete line
	ndd
	dw	=>delete word(under)
	db	=>delte before  cursor
 
copy:
	yy	=>copy
	nyy	=>n copy
 
paste:
	p	=>paste before
	P	=>above
